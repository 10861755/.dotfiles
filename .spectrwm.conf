# PLEASE READ THE MAN PAGE BEFORE EDITING THIS FILE!
# http://opensource.conformal.com/cgi-bin/man-cgi?spectrwm
# NOTE: all rgb color values in this file are in hex! see XQueryColor for examples

# workspace_limit	= 22
# focus_mode		= default
# focus_close		= previous
# focus_close_wrap	= 1
# focus_default		= last
# spawn_position		= next

# Window Decoration
 border_width		= 1
 color_focus		= blue
 #color_unfocus	= red
 region_padding	= 0
 tile_gap		= 0

# Remove border when bar is disabled and there is only one window on the region
disable_border = 1

# Region containment
# Distance window must be dragged/resized beyond the region edge before it is
# allowed outside the region.
# boundary_width 		= 50

# Remove window border when bar is disabled and there is only one window in workspace
# disable_border		= 1

# Bar Settings
 bar_enabled		= 1
 bar_border_width	= 1
 bar_border[1]		= rgb:00/80/80
 bar_border_unfocus[1]	= rgb:00/40/40
 bar_color[1]		= black
 bar_font_color[1]	= rgb:a0/a0/a0
 bar_font		= xft:Dejavu Sans Mono:size=11
#bar_font			=	-*-terminus-medium-*-*-*-*-*-*-*-*-*-*-*
# bar_action		= baraction.sh
 bar_justify		= left
 bar_format		= %H:%M:%S %Z +4< %a %d-%b-%Y +4< +F +N:+I +S +T +4< +W 
# bar_at_bottom		= 1
 stack_enabled		= 1
# clock_enabled		= 1
# clock_format		= %a %b %d %R %Z %Y
 iconic_enabled	= 0
 window_class_enabled	= 0
 window_instance_enabled	= 0
 window_name_enabled	= 1
 verbose_layout		= 1
 urgent_enabled		= 1

# Dialog box size ratio when using TRANSSZ quirk; 0.3 < dialog_ratio <= 1.0
# dialog_ratio		= 0.6

# Split a non-RandR dual head setup into one region per monitor
# (non-standard driver-based multihead is not seen by spectrwm)
# region		= screen[1]:1280x1024+0+0
# region		= screen[1]:1280x1024+1280+0

# Launch applications in a workspace of choice
 autorun		= ws[1]:stalonetray
 autorun		= ws[1]:firefox
 autorun		= ws[2]:sylpheed
 autorun		= ws[3]:gvim
 autorun		= ws[3]:xfe
 #autorun		= ws[4]:VirtualBox
 #autorun		= ws[0]:vlc

# autorun		= ws[2]:xombrero http://www.openbsd.org

# Customize workspace layout at start
# layout		= ws[1]:4:0:0:0:vertical
# layout		= ws[2]:0:0:0:0:horizontal
# layout		= ws[3]:0:0:0:0:fullscreen
# layout		= ws[4]:4:0:0:0:vertical_flip
# layout		= ws[5]:0:0:0:0:horizontal_flip

# Mod key, (Windows key is Mod4) (Apple key on OSX is Mod2) Mod1=Alt
 modkey = Mod4

# This allows you to include pre-defined key bindings for your keyboard layout.
# keyboard_mapping = ~/.spectrwm_us.conf

# Key bindings for United States (us) keyboards
# unbind with: bind[] = <keys>

# External programs
bind[term]					= MOD+t
bind[menu]					= MOD+e
bind[lock]					= MOD+l

# Spectrwm
bind[quit]					= MOD+Shift+q
bind[restart]				= MOD+q
bind[bar_toggle]		= MOD+Shift+b
bind[bar_toggle_ws]	= MOD+b
bind[version]				= MOD+Shift+v
bind[initscr]		= MOD+Shift+i
#bind[screenshot_all]	= MOD+s
#bind[screenshot_wind]	= MOD+Shift+s
#bind[button2]		= MOD+v

# Window
bind[cycle_layout]	= MOD+space
bind[flip_layout]		= MOD+Shift+w
bind[stack_reset]		= MOD+Shift+r
bind[master_shrink]	= MOD+s
bind[master_grow]		= MOD+g
bind[master_add]		= MOD+a
bind[master_del]		= MOD+d
bind[stack_inc]			= MOD+Shift+a
bind[stack_dec]			= MOD+Shift+d
bind[swap_main]			= MOD+w
bind[swap_next]			= MOD+Shift+f
bind[swap_prev]			= MOD+Shift+r
bind[focus_next]		= MOD+f
bind[focus_prev]		= MOD+r
bind[focus_main]		= MOD+m
bind[iconify]			= MOD+i
bind[uniconify]		= MOD+u
bind[wind_kill]		= MOD+Shift+x
bind[wind_del]		= MOD+x
#bind[focus_urgent]	= MOD+u

# Float
bind[float_toggle]	= MOD+v
bind[width_shrink]	= MOD+minus
bind[width_grow]	= MOD+equal
bind[height_shrink]	= MOD+Shift+minus
bind[height_grow]	= MOD+Shift+equal
bind[move_left]		= MOD+bracketleft
bind[move_right]	= MOD+bracketright
bind[move_up]		= MOD+Shift+bracketleft
bind[move_down]		= MOD+Shift+bracketright
#bind[raise_toggle]	= MOD+Shift+r

# Workspaces
bind[ws_1]		= MOD+1
bind[ws_2]		= MOD+2
bind[ws_3]		= MOD+3
bind[ws_4]		= MOD+4
bind[ws_5]		= MOD+5
bind[ws_6]		= MOD+6
bind[ws_7]		= MOD+7
bind[ws_8]		= MOD+8
bind[ws_9]		= MOD+9
bind[ws_10]		= MOD+0
bind[mvws_1]		= MOD+Shift+1
bind[mvws_2]		= MOD+Shift+2
bind[mvws_3]		= MOD+Shift+3
bind[mvws_4]		= MOD+Shift+4
bind[mvws_5]		= MOD+Shift+5
bind[mvws_6]		= MOD+Shift+6
bind[mvws_7]		= MOD+Shift+7
bind[mvws_8]		= MOD+Shift+8
bind[mvws_9]		= MOD+Shift+9
bind[mvws_10]		= MOD+Shift+0
bind[ws_prior]		= MOD+z
bind[ws_next_all]	= MOD+Tab
bind[ws_prev_all]	= MOD+Shift+Tab
#bind[ws_next_move]	= MOD+Shift+Up
#bind[ws_prev_move]	= MOD+Shift+Down
#bind[ws_next]	= MOD+Tab
#bind[ws_prev]	= MOD+Shift+Tab
#bind[ws_11]		= MOD+F1
#bind[ws_12]		= MOD+F2
#bind[ws_13]		= MOD+F3
#bind[ws_14]		= MOD+F4
#bind[ws_15]		= MOD+F5
#bind[ws_16]		= MOD+F6
#bind[ws_17]		= MOD+F7
#bind[ws_18]		= MOD+F8
#bind[ws_19]		= MOD+F9
#bind[ws_20]		= MOD+F10
#bind[ws_21]		= MOD+F11
#bind[ws_22]		= MOD+F12
#bind[mvws_11]		= MOD+Shift+F1
#bind[mvws_12]		= MOD+Shift+F2
#bind[mvws_13]		= MOD+Shift+F3
#bind[mvws_14]		= MOD+Shift+F4
#bind[mvws_15]		= MOD+Shift+F5
#bind[mvws_16]		= MOD+Shift+F6
#bind[mvws_17]		= MOD+Shift+F7
#bind[mvws_18]		= MOD+Shift+F8
#bind[mvws_19]		= MOD+Shift+F9
#bind[mvws_20]		= MOD+Shift+F10
#bind[mvws_21]		= MOD+Shift+F11
#bind[mvws_22]		= MOD+Shift+F12
#bind[name_workspace]	= MOD+Shift+slash
#bind[search_workspace]	= MOD+slash
#bind[search_win]	= MOD+f

# Regions
bind[rg_1]		= MOD+KP_End
bind[rg_2]		= MOD+KP_Down
bind[rg_3]		= MOD+KP_Next
bind[rg_4]		= MOD+KP_Left
bind[rg_5]		= MOD+KP_Begin
bind[rg_6]		= MOD+KP_Right
bind[rg_7]		= MOD+KP_Home
bind[rg_8]		= MOD+KP_Up
bind[rg_9]		= MOD+KP_Prior
bind[rg_next]		= MOD+Shift+Right
bind[rg_prev]		= MOD+Shift+Left
bind[mvrg_1]		= MOD+Shift+KP_End
bind[mvrg_2]		= MOD+Shift+KP_Down
bind[mvrg_3]		= MOD+Shift+KP_Next
bind[mvrg_4]		= MOD+Shift+KP_Left
bind[mvrg_5]		= MOD+Shift+KP_Begin
bind[mvrg_6]		= MOD+Shift+KP_Right
bind[mvrg_7]		= MOD+Shift+KP_Home
bind[mvrg_8]		= MOD+Shift+KP_Up
bind[mvrg_9]		= MOD+Shift+KP_Prior

# PROGRAMS

# Validated default programs:
# program[lock]		= xlock
 program[term]		= urxvt
 program[menu]		= dmenu_run $dmenu_bottom -fn $bar_font -nb $bar_color -nf $bar_font_color -sb $bar_border -sf $bar_color
 program[lock]		= slock

# To disable validation of the above, free the respective binding(s):
# bind[]		= MOD+Shift+Delete	# disable lock
# bind[]		= MOD+Shift+Enter	# disable term
# bind[]		= MOD+p			# disable menu

# Optional default programs that will only be validated if you override:
# program[screenshot_all]	= screenshot.sh full	# optional
# program[screenshot_wind]	= screenshot.sh window	# optional
# program[initscr]	= initscreen.sh			# optional

# EXAMPLE: Define 'firefox' action and bind to key.
# program[firefox]	= firefox http://spectrwm.org/
# bind[firefox]		= MOD+Shift+b

# Programs
 program[gvim]		= gvim
 bind[gvim]				= MOD+F1
 
 program[xfe]			= xfe
 bind[xfe]				= MOD+F2

 program[volup]		= mixer vol +5:+5
 bind[volup]			= MOD+F12
 program[voldown]	= mixer vol -5:-5
 bind[voldown]		= MOD+F11
 program[mute]		= mixer vol 0:0
 bind[mute]				= MOD+F10

# QUIRKS
# Default quirks, remove with: quirk[class:name] = NONE
 quirk[MPlayer:xv]			= FLOAT + FULLSCREEN + FOCUSPREV
 quirk[OpenOffice.org 2.4:VCLSalFrame]	= FLOAT
 quirk[OpenOffice.org 3.0:VCLSalFrame]	= FLOAT
 quirk[OpenOffice.org 3.1:VCLSalFrame]	= FLOAT
 quirk[Firefox-bin:firefox-bin]		= TRANSSZ
 quirk[Firefox:Dialog]			= FLOAT
 quirk[Gimp:gimp]			= FLOAT + ANYWHERE
# quirk[xine:Xine Window]			= FLOAT + ANYWHERE
# quirk[Xitk:Xitk Combo]			= FLOAT + ANYWHERE
# quirk[xine:xine Panel]			= FLOAT + ANYWHERE
# quirk[Xitk:Xine Window]			= FLOAT + ANYWHERE
# quirk[xine:xine Video Fullscreen Window] = FULLSCREEN + FLOAT
# quirk[pcb:pcb]				= FLOAT
 quirk[Firefox:Places]			= FLOAT
 quirk[stalonetray:stalonetray]			= FLOAT + ANYWHERE + FULLSCREEN
 #quirk[Kicad:kicad] = FLOAT + ANYWHERE + FULLSCREEN
